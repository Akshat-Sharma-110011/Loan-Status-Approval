apiVersion: apps/v1
kind: Deployment
metadata:
  name: loan-status-proj
  labels:
    app: loan-status-proj
spec:
  replicas: 2
  selector:
    matchLabels:
      app: loan-status-proj
  template:
    metadata:
      labels:
        app: loan-status-proj
    spec:
      containers:
      - name: loan-status-proj
        image: 302511180857.dkr.ecr.us-east-1.amazonaws.com/loan-status-proj
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "1"
        env:
        - name: MLFLOW_TRACKING_PASSWORD
          valueFrom:
            secretKeyRef:
              name: capstone-secret
              key: MLFLOW_TRACKING_PASSWORD
        - name: MLFLOW_TRACKING_USERNAME
          value: "Akshat-Sharma-110011"
        - name: MLFLOW_TRACKING_TOKEN
          value: "268f8944c99d48868fa3235eb38ea909e929c70c"
        - name: PYTHONPATH
          value: "/app:/app/src"
        - name: FLASK_APP
          value: "app.py"
        - name: FLASK_ENV
          value: "production"
        - name: DEBUG_MODE
          value: "true"
        # Add health check probes
        readinessProbe:
          httpGet:
            path: /health  # Make sure this endpoint exists in your Flask app
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health  # Make sure this endpoint exists in your Flask app
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: loan-status-proj-service
spec:
  type: LoadBalancer
  selector:
    app: loan-status-proj
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000